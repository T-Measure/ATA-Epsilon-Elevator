


pre {
	var criticalResourcesLevel1 = Class.all.select(s|s.getAppliedStereotypes().name.includes("Critical::Level1"));
	var criticalResourcesLevel2 = Class.all.select(s|s.getAppliedStereotypes().name.includes("Critical::Level2"));
	var criticalResourcesLevel3 = Class.all.select(s|s.getAppliedStereotypes().name.includes("Critical::Level3"));	
	
	var passiveRedundancies = Class.all.select(s|s.getAppliedStereotypes().name.includes("Redundancy::Passive"));
	var activeRedundancies = Class.all.select(s|s.getAppliedStereotypes().name.includes("Redundancy::Active"));
	var redundancies:Sequence();
	redundancies.addAll(passiveRedundancies);
	redundancies.addAll(activeRedundancies);
	
	
	var classes = Class.all;
	var associations = Association.all;
	var usages = Usage.all;
	
	var classConnections = Map{};
	for (association in associations){
		var memberEnds = association.memberEnds.getTypes();
		for (class in memberEnds){
			if (not(classConnections.containsKey(class))){
				classConnections.put(class, OrderedSet{});
			}
			var memberEndsMinusSelf=memberEnds.excluding(class);
			classConnections.get(class).addAll(memberEndsMinusSelf);
		}
	}
		
	for (usage in usages){
		if (not(classConnections.containsKey(usage.client.first()))){
			classConnections.put(usage.client.first(), OrderedSet{});
		}
		classConnections.get(usage.client.first()).add(usage.supplier.first());
	}
}

context Class {
	constraint redundancyLevel1 {
		guard: criticalResourcesLevel1.includes(self)
		
		check: self.countRedundancies() >=1 	
		
		message: "///////////ERROR redundancyLevel1: The resource "+self.name+
					" does not fulfil redundancy level 1."
	}
}

context Class {
	constraint redundancyLevel2 {
		guard: criticalResourcesLevel2.includes(self)
		
		check: self.countRedundancies() >=2 	
		
		message: "///////////ERROR redundancyLevel2: The resource "+self.name+
					" does not fulfil redundancy level 2."
	}
}

context Class {
	constraint redundancyLevel3 {
		guard: criticalResourcesLevel3.includes(self)
		
		check: self.countRedundancies() >=3 	
		
		message: "///////////ERROR redundancyLevel3: The resource "+self.name+
					" does not fulfil redundancy level 3."
	}
}


operation Class countRedundancies() : Integer {	
	var countRedundancies=0;
	for(class: Class in redundancies){
		
		if (self.name=class.name){
			countRedundancies += 1;
		}
	}
	return countRedundancies;
}



operation Collection getStereotypes(): OrderedSet
{
	var stereotypes = OrderedSet{};
	for (item in self)
	{
		stereotypes.addAll(item.getAppliedStereotypes().name);
	}
	
	return stereotypes;
}


operation Collection getTypes(): OrderedSet
{
	var types = OrderedSet{};
	for (item in self)
	{
		types.add(item.type);
	}
	
	return types;
}

